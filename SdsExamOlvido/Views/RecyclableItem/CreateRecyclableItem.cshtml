@model SdsExamOlvido.Models.RecyclableItem

@{
    ViewBag.Title = "Create Recyclable Item";
}

@section scripts{
    <script src="~/Scripts/CreateRecyclableItem.js"></script>
}
@if (Model?.Id != null)
{
    <h2>Edit Recyclable Item</h2>
}
else
{
    <h2>Create Recyclable Item</h2>
}


@using (Html.BeginForm()) 
{

    

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Recyclable Item</h4>
        <hr />

        @if (Model?.Id != null)
        {
            @Html.Hidden("Id", Model.Id)
        }

        <div class="type-dropdown form-group d-flex flex-column">
            <label class="control-label col-md-2">Recyclable Type</label>
            <select class="col-md-10 " name="@Html.NameFor(x=>x.RecyclableTypeId)">
                @foreach (var item in ViewBag.RecyclableTypes)
                {
                    <option data-rate="@item.Rate" value="@item.Id">@item.Type</option>
                }
            </select>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control description-input" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control weight-input" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputedRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input readonly class="computed-input form-control" name="@Html.NameFor(x=>x.ComputedRate)" value="0" />
                @Html.ValidationMessageFor(model => model.ComputedRate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group d-flex justify-content-start mt-2 mb-2" >
            <div class="col-md-offset-2 ">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
            <div class="col-md-offset-2 ms-5">
                <input type="reset" value="Clear Form" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "RecyclableItemList", "RecyclableItem")
</div>